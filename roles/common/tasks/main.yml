---
- name: adding vlc repositories 
  become: yes
  apt_repository:
    repo: ppa:videolan/master-daily
  notify: update packages

- name: adding kde repositories 
  become: yes
  apt_repository:
    repo: ppa:kubuntu-ppa/backports
  notify: update packages

- name: add google chrome Apt signing key
  become: yes
  apt_key:
    url: https://dl-ssl.google.com/linux/linux_signing_key.pub
    state: present

- name: adding google chrome repositories 
  become: yes
  apt_repository:
    repo: deb http://dl.google.com/linux/chrome/deb/ stable main
  notify: update packages

- name: add vscode Apt signing key
  become: yes
  apt_key:
    url: https://packages.microsoft.com/keys/microsoft.asc
    keyring: /etc/apt/trusted.gpg.d/microsoft.gpg

- name: adding vscode repositories 
  become: yes
  apt_repository:
    repo: deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main
  notify: update packages

- name: add wine Apt signing key
  become: yes
  apt_key:
    url: https://dl.winehq.org/wine-builds/Release.key
    state: present

- name: adding wine repositories 
  become: yes
  apt_repository:
    repo: deb [arch=i386] https://dl.winehq.org/wine-builds/ubuntu/  xenial main
  notify: update packages

- name: add virtualbox Apt signing key
  become: yes
  apt_key:
    url: https://www.virtualbox.org/download/oracle_vbox.asc 
    state: present

- name: adding virtualbox repositories 
  become: yes
  apt_repository:
    repo: deb http://download.virtualbox.org/virtualbox/debian/ artful contrib
  notify: update packages

- name: add spotify Apt signing key
  become: yes
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: 0DF731E45CE24F27EEEB1450EFDC8610341D9410

- name: adding spotify repositories 
  become: yes
  apt_repository:
    repo: deb http://repository.spotify.com stable non-free
  notify: update packages

- name: install packages
  become: yes
  apt: name={{ item }} state=present
  with_items:
   - build-essential
   - code
   - curl
   - dkms
   - git
   - google-chrome-stable
   - kubuntu-desktop
   - linux-headers-generic
   - meld
   - net-tools
   - python-pip
   - spotify-client
   - virtualbox
   - virtualbox-guest-additions-iso
   - wine-stable
   - zsh

- name: copying git config file
  copy:
    src: roles/common/files/gitconfig
    dest: "/home/{{ user }}/.gitconfig"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: 0665


- name: check ohmyzsh lock file exist
  stat: 
    path: ./tmp/ohmyzsh
  ignore_errors: true
  register: ohmyzsh

- name: install ohmyzsh
  become: yes
  become_user: "{{ user }}"
  run_once: true
  shell: curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh
  when: ohmyzsh.stat.exists == false

- name: create ohmyzsh lock file
  file: path=./tmp/ohmyzsh state=touch
  when: ohmyzsh.stat.exists == false

- name: check docker lock file exist
  stat: 
    path: ./tmp/docker
  ignore_errors: true
  register: docker

- name: install docker
  run_once: true
  shell: curl -fsSL https://get.docker.com/ | sh
  when: docker.stat.exists == false

- name: create lock file
  file: path=./tmp/docker state=touch
  when: docker.stat.exists == false

- name: check permission lock file exist
  stat: 
    path: ./tmp/permission
  ignore_errors: true
  register: permission

- name: giving permission to {{ user }} on docker
  become: yes
  run_once: true
  shell: "usermod -aG docker {{ user }}"
  when: permission.stat.exists == false

- name: create permission lock file
  file: path=./tmp/permission state=touch
  when: permission.stat.exists == false

- name: check compose lock file exist
  stat: 
    path: ./tmp/compose
  ignore_errors: true
  register: compose

- name: install docker compose
  become: yes
  run_once: true
  shell: curl -L https://github.com/docker/compose/releases/download/1.20.1/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
  when: compose.stat.exists ==false


- name: create compose lock file
  file: path=./tmp/compose state=touch
  when: compose.stat.exists == false

- name: check comp_perm lock file exist
  stat: 
    path: ./tmp/comp_perm
  ignore_errors: true
  register: comp_perm

- name: permission on compose
  become: yes
  run_once: true
  shell: chmod +x /usr/local/bin/docker-compose
  when: comp_perm.stat.exists == false

- name: create comp_perm lock file
  file: path=./tmp/comp_perm state=touch
  when: comp_perm.stat.exists == false

- name: check postman lock file exist
  stat: 
    path: ./tmp/postman
  ignore_errors: true
  register: postman

- name: download and unarchive postman
  become: yes
  unarchive:
    src: https://dl.pstmn.io/download/latest/linux64
    dest: /opt/
    remote_src: yes
    owner: "{{ user }}"
  when: postman.stat.exists == false
    
- name: creating link to postman
  become: yes
  file:
    src: /opt/Postman/Postman
    dest: /usr/bin/postman
    state: link
  when: postman.stat.exists == false

- name: create postman lock file
  file: path=./tmp/postman state=touch
  when: postman.stat.exists == false

# - name: get id of wifi adpter
#   shell: 'lsusb | grep "D-Link" | awk "{print \$6}"'
#   register: wifi

- name: check clone lock file exist
  stat: 
    path: ./tmp/clone
  ignore_errors: true
  register: clone

- name: clone adapter drives repo
  shell: git clone https://github.com/Mange/rtl8192eu-linux-driver.git wifidriver
  when: clone.stat.exists == false

- name: create clone lock file
  file: path=./tmp/clone state=touch
  when: clone.stat.exists == false
  register: clone

- name: check adapter lock file exist
  stat: 
    path: ./tmp/adapter
  ignore_errors: true
  register: adapter

- name: install adapter drives
  shell: |
    cd ./wifidriver
    make
    make install
    exit 0
  when: adapter.stat.exists == false

- name: create adapter lock file
  file: path=./tmp/adapter state=touch
  when: adapter.stat.exists == false

- name: check dkms_module lock file exist
  stat: 
    path: ./tmp/dkms_module
  ignore_errors: true
  register: dkms_module

- name: config dkms module
  shell: dkms add ./wifidriver
  become: yes
  run_once: yes
  when: dkms_module.stat.exists == false

- name: create dkms_module lock file
  file: path=./tmp/dkms_module state=touch
  when: dkms_module.stat.exists == false

- name: creating folder if not exist
  shell: mkdir -p /usr/src/8192cu-1.10
  become: yes
  run_once: yes

- name: check copy lock file exist
  stat: 
    path: ./tmp/copy
  ignore_errors: true
  register: copy

- name: copy wifi driver folder to /usr/src/8192cu-1.10
  copy:
    src: wifidriver/.
    dest: /usr/src/8192cu-1.10/
    directory_mode: 775
  become: yes
  run_once: yes
  when: copy.stat.exists == false

- name: create copy lock file
  file: path=./tmp/copy state=touch
  when: copy.stat.exists == false

- name: check recompile lock file exist
  stat: 
    path: ./tmp/recompile
  ignore_errors: true
  register: recompile

- name: recompile and install
  shell: dkms install 8192cu/1.10
  become: yes
  run_once: yes
  when: recompile.stat.exists == false

- name: create recompile lock file
  file: path=./tmp/recompile state=touch
  when: recompile.stat.exists == false

- name: check update_mod lock file exist
  stat: 
    path: ./tmp/update_mod
  ignore_errors: true
  register: update_mod

- name: update modules
  shell: depmod -a
  become: yes
  run_once: yes
  when: update_mod.stat.exists == false

- name: create update_mod lock file
  file: path=./tmp/update_mod state=touch
  when: update_mod.stat.exists == false

# - name: check native lock file exist
#   stat: 
#     path: ./tmp/native
#   ignore_errors: true
#   register: native

# - name: desable native driver
#   shell: cp ./wifidriver/blacklist-native-rtl8192.conf /etc/modprobe.d/ 
#   become: yes
#   run_once: yes
#   when: native.stat.exists == false

# - name: create native lock file
#   file: path=./tmp/native state=touch
#   when: native.stat.exists == false